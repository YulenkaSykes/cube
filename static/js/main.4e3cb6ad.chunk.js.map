{"version":3,"sources":["App.js","scene.js","reportWebVitals.js","index.js"],"names":["App","useEffect","scene","THREE","camera","window","innerWidth","innerHeight","renderer","antialias","setSize","domElement","classList","add","document","body","appendChild","bgColor","background","geometry","material","color","cube","position","z","y","callAnimation","a","gsap","to","bottomBorder","duration","ease","scale","x","onComplete","animate","requestAnimationFrame","render","InitScene","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"6NAeeA,MAXf,WAIE,OAHAC,qBAAU,YCFa,WACvB,IAAMC,EAAQ,IAAIC,IACZC,EAAS,IAAID,IACjB,GACAE,OAAOC,WAAaD,OAAOE,YAC3B,GACA,KAGIC,EAAW,IAAIL,IAAoB,CAAEM,WAAW,IACtDD,EAASE,QAAQL,OAAOC,WAAYD,OAAOE,aAC3CC,EAASG,WAAWC,UAAUC,IAAI,SAClCC,SAASC,KAAKC,YAAYR,EAASG,YAEnC,IAAMM,EAAU,IAAId,IAAY,mBAEhCD,EAAMgB,WAAaD,EAEnB,IAAME,EAAW,IAAIhB,IACfiB,EAAW,IAAIjB,IAAwB,CAC3CkB,MAAO,UAGHC,EAAO,IAAInB,IAAWgB,EAAUC,GACtClB,EAAMW,IAAIS,GAEVlB,EAAOmB,SAASC,EAAI,GAKpBF,EAAKC,SAASE,EAFI,IAIlB,IAAMC,EAjCuB,uFAmC7B,sBAAAC,EAAA,6DACEC,IAAKC,GAAGP,EAAKC,SAAU,CACrBE,GAAGK,EACHC,SAAU,EACVC,KAAM,YAJV,SAOQJ,IAAKC,GAAGP,EAAKW,MAAO,CAAER,EAAG,EAAGM,SAAU,GAAKC,KAAM,YAPzD,cASEJ,IAAKC,GAAGP,EAAKC,SAAU,CACrBE,GAAGK,EACHC,SAAU,EACVC,KAAM,YAZV,SAeQJ,IAAKC,GAAGP,EAAKW,MAAO,CAAEC,EAAG,IAAKT,EAAG,EAAGM,SAAU,GAAKC,KAAM,YAfjE,OAiBEJ,IAAKC,GAAGP,EAAKW,MAAO,CAAEC,EAAG,IAAKT,EAAG,IAAKM,SAAU,GAAKC,KAAM,YAC3DJ,IAAKC,GAAGP,EAAKC,SAAU,CAAEE,EAxBT,IAwBuBM,SAAU,EAAGC,KAAM,YAE1DJ,IAAKC,GAAGP,EAAKW,MAAO,CAClBC,EAAG,EACHT,EAAG,EACHM,SAAU,IACVC,KAAM,UACNG,WAAYT,IAzBhB,4CAnC6B,sBAgE7BA,IAEgB,SAAVU,IACJC,sBAAsBD,GAItB5B,EAAS8B,OAAOpC,EAAOE,GAGzBgC,GDvEEG,MAGA,qBAAKC,UAAU,MAAf,SACE,oBAAIA,UAAU,WAAd,sDEESC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASZ,OACP,cAAC,IAAMa,WAAP,UACE,cAAC,EAAD,MAEFrC,SAASsC,eAAe,SAG1BX,M","file":"static/js/main.4e3cb6ad.chunk.js","sourcesContent":["import \"./App.css\";\nimport React, { useEffect } from \"react\";\nimport { InitScene } from \"./scene\";\n\nfunction App() {\n  useEffect(() => {\n    InitScene();\n  });\n  return (\n    <div className=\"App\">\n      <h1 className=\"centered\">Hello cube with Three.js ðŸ«‘</h1>\n    </div>\n  );\n}\n\nexport default App;\n","import * as THREE from \"three\";\r\nimport gsap from \"gsap\";\r\n\r\nexport const InitScene = () => {\r\n  const scene = new THREE.Scene();\r\n  const camera = new THREE.PerspectiveCamera(\r\n    75,\r\n    window.innerWidth / window.innerHeight,\r\n    0.1,\r\n    1000\r\n  );\r\n\r\n  const renderer = new THREE.WebGLRenderer({ antialias: true });\r\n  renderer.setSize(window.innerWidth, window.innerHeight);\r\n  renderer.domElement.classList.add(\"three\");\r\n  document.body.appendChild(renderer.domElement);\r\n\r\n  const bgColor = new THREE.Color(\"rgb(31, 31, 31)\");\r\n\r\n  scene.background = bgColor;\r\n\r\n  const geometry = new THREE.BoxGeometry();\r\n  const material = new THREE.MeshBasicMaterial({\r\n    color: \"white\",\r\n    // wireframe: true,\r\n  });\r\n  const cube = new THREE.Mesh(geometry, material);\r\n  scene.add(cube);\r\n\r\n  camera.position.z = 15;\r\n\r\n  const bottomBorder = -2;\r\n  const topBorder = 2.5;\r\n\r\n  cube.position.y = topBorder;\r\n\r\n  const callAnimation = animation;\r\n\r\n  async function animation() {\r\n    gsap.to(cube.position, {\r\n      y: bottomBorder / 2,\r\n      duration: 4,\r\n      ease: \"elastic\",\r\n    }); //falling\r\n\r\n    await gsap.to(cube.scale, { y: 2, duration: 0.3, ease: \"elastic\" }); //transforming y\r\n\r\n    gsap.to(cube.position, {\r\n      y: bottomBorder / 2,\r\n      duration: 2,\r\n      ease: \"elastic\",\r\n    }); //falling\r\n\r\n    await gsap.to(cube.scale, { x: 2.5, y: 1, duration: 0.1, ease: \"elastic\" }); // transforming x\r\n\r\n    gsap.to(cube.scale, { x: 2.5, y: 2.5, duration: 0.5, ease: \"elastic\" }); //transforming y\r\n    gsap.to(cube.position, { y: topBorder, duration: 4, ease: \"elastic\" }); // upping x\r\n\r\n    gsap.to(cube.scale, {\r\n      x: 1,\r\n      y: 1,\r\n      duration: 1.5,\r\n      ease: \"elastic\",\r\n      onComplete: callAnimation,\r\n    }); //transforming y\r\n  }\r\n\r\n  callAnimation();\r\n\r\n  const animate = function () {\r\n    requestAnimationFrame(animate);\r\n\r\n    // cube.rotation.y += 0.005;\r\n\r\n    renderer.render(scene, camera);\r\n  };\r\n\r\n  animate();\r\n};\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}