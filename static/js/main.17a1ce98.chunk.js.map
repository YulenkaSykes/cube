{"version":3,"sources":["App.js","scene.js","reportWebVitals.js","index.js"],"names":["App","useEffect","scene","THREE","camera","window","innerWidth","innerHeight","renderer","antialias","setSize","domElement","classList","add","document","body","appendChild","geometry","material","color","cube","position","z","y","gsap","timeline","setInterval","a","to","bottomBorder","duration","ease","scale","x","animate","requestAnimationFrame","rotation","render","InitScene","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"6NAeeA,MAXf,WAIE,OAHAC,qBAAU,YCFa,WACvB,IAAMC,EAAQ,IAAIC,IACZC,EAAS,IAAID,IACjB,GACAE,OAAOC,WAAaD,OAAOE,YAC3B,GACA,KAGIC,EAAW,IAAIL,IAAoB,CAAEM,WAAW,IACtDD,EAASE,QAAQL,OAAOC,WAAYD,OAAOE,aAC3CC,EAASG,WAAWC,UAAUC,IAAI,SAClCC,SAASC,KAAKC,YAAYR,EAASG,YAEnC,IAAMM,EAAW,IAAId,IACfe,EAAW,IAAIf,IAAwB,CAC3CgB,MAAO,UAGHC,EAAO,IAAIjB,IAAWc,EAAUC,GACtChB,EAAMW,IAAIO,GAEVhB,EAAOiB,SAASC,EAAI,GAQpBF,EAAKC,SAASE,EALI,EAODC,IAAKC,WAEtBC,YAAW,sBAAC,sBAAAC,EAAA,6DACVH,IAAKI,GAAGR,EAAKC,SAAU,CACrBE,GAAGM,EACHC,SAAU,EACVC,KAAM,YAJE,SAOJP,IAAKI,GAAGR,EAAKY,MAAO,CAAET,EAAG,EAAGO,SAAU,GAAKC,KAAM,YAP7C,cASVP,IAAKI,GAAGR,EAAKC,SAAU,CACrBE,GAAGM,EACHC,SAAU,EACVC,KAAM,YAZE,SAeJP,IAAKI,GAAGR,EAAKY,MAAO,CACxBC,EAAG,EACHV,EAAG,GACHO,SAAU,IACVC,KAAM,YAnBE,OAsBVP,IAAKI,GAAGR,EAAKY,MAAO,CAAEC,EAAG,EAAGV,EAAG,EAAGO,SAAU,GAAKC,KAAM,YACvDP,IAAKI,GAAGR,EAAKC,SAAU,CAAEE,EAhCT,EAgCuBO,SAAU,EAAGC,KAAM,YAE1DP,IAAKI,GAAGR,EAAKY,MAAO,CAAEC,EAAG,EAAGV,EAAG,EAAGO,SAAU,EAAGC,KAAM,YAzB3C,2CA0BT,MAEa,SAAVG,IACJC,sBAAsBD,GAWtBd,EAAKgB,SAASb,GAAK,KAEnBf,EAAS6B,OAAOnC,EAAOE,GAGzB8B,GD5EEI,MAGA,qBAAKC,UAAU,MAAf,SACE,oBAAIA,UAAU,WAAd,0CEESC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASZ,OACP,cAAC,IAAMa,WAAP,UACE,cAAC,EAAD,MAEFpC,SAASqC,eAAe,SAG1BX,M","file":"static/js/main.17a1ce98.chunk.js","sourcesContent":["import \"./App.css\";\nimport React, { useEffect } from \"react\";\nimport { InitScene } from \"./scene\";\n\nfunction App() {\n  useEffect(() => {\n    InitScene();\n  });\n  return (\n    <div className=\"App\">\n      <h1 className=\"centered\">Hello cube with Three.js!</h1>\n    </div>\n  );\n}\n\nexport default App;\n","import * as THREE from \"three\";\r\nimport gsap from \"gsap\";\r\n\r\nexport const InitScene = () => {\r\n  const scene = new THREE.Scene();\r\n  const camera = new THREE.PerspectiveCamera(\r\n    75,\r\n    window.innerWidth / window.innerHeight,\r\n    0.1,\r\n    1000\r\n  );\r\n\r\n  const renderer = new THREE.WebGLRenderer({ antialias: true });\r\n  renderer.setSize(window.innerWidth, window.innerHeight);\r\n  renderer.domElement.classList.add(\"three\");\r\n  document.body.appendChild(renderer.domElement);\r\n\r\n  const geometry = new THREE.BoxGeometry();\r\n  const material = new THREE.MeshBasicMaterial({\r\n    color: \"white\",\r\n    // wireframe: true,\r\n  });\r\n  const cube = new THREE.Mesh(geometry, material);\r\n  scene.add(cube);\r\n\r\n  camera.position.z = 10;\r\n\r\n  const bottomBorder = -2;\r\n  const topBorder = 2;\r\n  // const speedOfFalling = 0.05;\r\n\r\n  // const g = 9.8;\r\n\r\n  cube.position.y = topBorder;\r\n\r\n  const timeline = gsap.timeline();\r\n\r\n  setInterval(async () => {\r\n    gsap.to(cube.position, {\r\n      y: bottomBorder / 2,\r\n      duration: 4,\r\n      ease: \"elastic\",\r\n    }); //falling\r\n\r\n    await gsap.to(cube.scale, { y: 2, duration: 0.3, ease: \"elastic\" }); //transforming y\r\n\r\n    gsap.to(cube.position, {\r\n      y: bottomBorder / 2,\r\n      duration: 2,\r\n      ease: \"elastic\",\r\n    }); //falling\r\n\r\n    await gsap.to(cube.scale, {\r\n      x: 2,\r\n      y: 0.5,\r\n      duration: 0.15,\r\n      ease: \"elastic\",\r\n    }); // transforming x\r\n\r\n    gsap.to(cube.scale, { x: 1, y: 2, duration: 0.5, ease: \"elastic\" }); //transforming y\r\n    gsap.to(cube.position, { y: topBorder, duration: 4, ease: \"elastic\" }); // upping x\r\n\r\n    gsap.to(cube.scale, { x: 1, y: 1, duration: 2, ease: \"elastic\" }); //transforming y\r\n  }, 1500);\r\n\r\n  const animate = function () {\r\n    requestAnimationFrame(animate);\r\n\r\n    // if (cube.position.y - speedOfFalling < bottomBorder) {\r\n    //   cube.position.y = topBorder;\r\n    //   gsap.to(cube.scale, { y: 3, duration: 3, ease: \"elastic\" });\r\n    // } else {\r\n    //   cube.position.y -= speedOfFalling;\r\n    //   //   cube.scale.y = 2.5;\r\n    //   gsap.set(cube.scale, { x: 3, y: 1 });\r\n    // }\r\n\r\n    cube.rotation.y += 0.005;\r\n\r\n    renderer.render(scene, camera);\r\n  };\r\n\r\n  animate();\r\n};\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}